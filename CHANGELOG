0.0.9:
* Adding [] and has_key? support methods to the DummyApplication class

0.0.8:
* Added a DummyApplication object which will respond to non-existent url helper calls with a predicatable dummy route
* Added a :test datastore that can be used for testing, which responds with a DummyApplication when the requested application does not exist
* Refactored UrlHelpers to check whether the route exists in the app, rather than regext matching against all defined routes (this allows the :test datastore and DummyApplicaiton to respond when things don't actually exist)

0.0.7:
* Refactored url helpers a bit to use our own custom path part replacement (which still doesn't support format) and make uniform calls to the base url_for helper method for all Rails versions
* Url helpers now accept additional options (like host information) which get merged with the appliaction's default url options stored in the route pool

0.0.6:
* Added two new datastores - :active_record and :active_record_with_memcache
* Added a model and generator for the migration to support the new active record datastores
* Initial support for Rails 3 - the major caveat right now is that :format is not supported at all (and is stripped entirely from the generated url)

0.0.5:
* BREAKING CHANGE: Renamed datasources -> datastores. Didn't think it was worth adding transitional config vars since I'm the only one using this right now.
* Adding specs
* Start working on rails 3 compatibility (one outstanding issue: https://github.com/markrebec/excursion/issues/1)

0.0.4:
* Properly namespacing keys when using the :memcache datasource

0.0.3:
* Ability to remove an app from the pool
* Rake task to remove the running app from the pool
* Config option :register_app (defaults to true) to control whether the railtie registers the app on init, allowing you to "disable" excursion but still use helpers from other apps.

0.0.2:
* Added support for :memcache datasource - requires the dalli gem.
* Refactored helpers, sharing helpers between instances, global helpers available at Excursion.url_helpers.
* Custom error classes, improved exception raising/handling

0.0.1:
* Initial working prototype. Only supports the file datasource.
